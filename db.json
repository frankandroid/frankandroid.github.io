{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/uploads/photo.jpg","path":"uploads/photo.jpg","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1484642758849},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1484642758849},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1484642758849},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1484642758849},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1484642758849},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1484642758849},{"_id":"themes/next/README.en.md","hash":"f947d9a552da869f0dbef140ceeeb7b040b0f4a4","modified":1484642758849},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1484642758849},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1484642758849},{"_id":"themes/next/_config.yml","hash":"f99ec0aa02169ac1eadb5d6519fae4babd65fb3e","modified":1484720153850},{"_id":"themes/next/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1484642758849},{"_id":"themes/next/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1484642758880},{"_id":"source/_posts/aboout-dagger2.md","hash":"ee8f19a08091f2ac286c38d4133d28a520a91436","modified":1485082166000},{"_id":"source/_posts/android_five_scrollFlags.md","hash":"e45512b266e95d7afeabfb5cd0ad1986a1f350bd","modified":1484987925872},{"_id":"source/categories/index.md","hash":"314660e9136f13879c81b04eed47b442823fcd78","modified":1484721151062},{"_id":"source/tags/index.md","hash":"56211a834b3c1f3f8e4a85c72fe3a85c6d33c0d5","modified":1484720946845},{"_id":"source/uploads/photo.jpg","hash":"bd410cb1254d631bbb43c7367cb5ebf2617ee50e","modified":1481249969134},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1484642758849},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1484642758849},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1484642758833},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1484642744467},{"_id":"themes/next/.git/config","hash":"340cff4364d9733a32042fdb93097c334a781c93","modified":1484642758849},{"_id":"themes/next/.git/index","hash":"269595a0bd057c6a172d15dbc0a6fa17bc434e06","modified":1484646059350},{"_id":"themes/next/.git/packed-refs","hash":"12ca02d8374d9a441a6c8a6c9ed061432cb0a8c9","modified":1484642758833},{"_id":"themes/next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1484642758849},{"_id":"themes/next/languages/en.yml","hash":"d02acdce503c86fbb01920ad22d31ec56fc285f1","modified":1484642758849},{"_id":"themes/next/languages/default.yml","hash":"fe00529a94bb2550194a31d178f5810b45014ab6","modified":1484642758849},{"_id":"themes/next/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1484642758849},{"_id":"themes/next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1484642758849},{"_id":"themes/next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1484642758865},{"_id":"themes/next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1484642758865},{"_id":"themes/next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1484642758849},{"_id":"themes/next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1484642758865},{"_id":"themes/next/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1484642758865},{"_id":"themes/next/languages/ru.yml","hash":"402e676252ab1fc4522257a578738cb9536eb077","modified":1484642758865},{"_id":"themes/next/languages/zh-Hans.yml","hash":"439c16c744b1596f24d9e0b4e230c4d3c93b7d85","modified":1484642758865},{"_id":"themes/next/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1484642758865},{"_id":"themes/next/layout/_layout.swig","hash":"24de463d28bacbf2a28c34fecf082980f7f33a12","modified":1484642758865},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1484642758880},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1484642758880},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1484642758880},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1484642758880},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1484642758880},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1484642758880},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1484642758880},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1484642758880},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1484642759521},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1484642759521},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1484642759521},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642759474},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1484642744467},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1484642744467},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1484642744467},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1484642744467},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1484642744467},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1484642744467},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1484642744467},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1484642744467},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1484642744467},{"_id":"themes/next/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1484642744467},{"_id":"themes/next/.git/logs/HEAD","hash":"bd19a6c9f07f39f976e30f6b3a9170ea2ccdb953","modified":1484642758833},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1484642758865},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1484642758865},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1484642758865},{"_id":"themes/next/layout/_macro/post.swig","hash":"216907a1348317114ccb90fecc752b8b7255b15b","modified":1484642758865},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a42851e17d8961e5cae8b588d95a4a5456964972","modified":1484642758865},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1484642758865},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1484642758865},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1484642758865},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1484642758865},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1484642758865},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e9beddda9758d8739c41fc8c67b2e72fc29c1244","modified":1484642758880},{"_id":"themes/next/layout/_partials/comments.swig","hash":"09da002fbeb0fe2ac3f180ecf77bce568ea989ca","modified":1484642758865},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1484642758865},{"_id":"themes/next/layout/_partials/footer.swig","hash":"683616f4a80796051e2346d80acf838a589450b0","modified":1484642758865},{"_id":"themes/next/layout/_partials/header.swig","hash":"8985089c950d6df0efab9cd549a6b9ee50708ee2","modified":1484642758865},{"_id":"themes/next/layout/_partials/head.swig","hash":"740684ef2b6e56183529387882042612e904bc8d","modified":1484642758865},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1484642758865},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1484642758865},{"_id":"themes/next/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1484642758865},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1484642759458},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1484642759474},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1484642759474},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1484642759474},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1484642759474},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1484642759474},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1484642759474},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1484642759474},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1484642759474},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1484642759474},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484642759474},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484642759474},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1484642759474},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1484642759474},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1484642759474},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1484642758880},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1484642758880},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1484642758880},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1484642758880},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1484642758880},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642758880},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642758880},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642759458},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642759458},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642759458},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642759458},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484642759458},{"_id":"themes/next/.git/refs/heads/master","hash":"2311b7302155cc3ec46e40ad16dc5c94e36328b4","modified":1484642758833},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1484642758865},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1484642758865},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1484642758865},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"188423f7df0eb8c99a03cb6741384415651c4665","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4f9efb15c9aaa016ac78d9f8aa2caefea87869df","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1484642758880},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1484642758865},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1484642758865},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1484642758865},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1484642758865},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1484642758865},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1484642758865},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1484642758865},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1484642758865},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1484642758865},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1484642759458},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1484642759458},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1484642759458},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1484642759458},{"_id":"themes/next/source/css/_variables/base.styl","hash":"8b08a5ce4222aa731b180a12127bd0e52d12ede8","modified":1484642759458},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c666e352c3b8e4ad0a16cc757b08f44ef9172182","modified":1484642759458},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1484642759474},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1484642759474},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1484642759474},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1484642759474},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1484642759474},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1484642759474},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1484642759474},{"_id":"themes/next/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1484642759474},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1484642759474},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1484642759474},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1484642759474},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1484642759474},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1484642759489},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1484642759489},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1484642759489},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1484642759489},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1484642759505},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1484642759505},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1484642759505},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1484642759505},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1484642759505},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1484642759505},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1484642759505},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1484642759505},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1484642759505},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1484642759505},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1484642759505},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1484642759521},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1484642759505},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"bd19a6c9f07f39f976e30f6b3a9170ea2ccdb953","modified":1484642758833},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1484642758833},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1484642758880},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"f40a697fd046415924a142eec1effad70f3cb187","modified":1484642758880},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1484642759396},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1484642759396},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1484642759396},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1484642759396},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1484642759443},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1484642759443},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1484642759443},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1484642759443},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1484642759443},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1484642759443},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"34acb45007229b299951ce35d8eef642ea16fbe9","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"221d3dbc04ff6c211ba9382397c4977e9f493153","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"173f3aa31c41782591b7abeadd4f88f68d59b042","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"1be4ef3f97f329e2531bfd2dfdc40c0e46df35c8","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1484642759458},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c2390263a298a2b78c5f941e6827c13f02e1ee85","modified":1484642759474},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1484642759474},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1484642759474},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1484642759474},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1484642759489},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1484642759489},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1484642759489},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1484642759505},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1484642759505},{"_id":"themes/next/.git/objects/pack/pack-00f07f1de24eae5e11a6eafe2ba682e19a17d816.idx","hash":"9d5dbc105ad16f3b5a38b696e32be0282b529cf3","modified":1484642758427},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1484642759505},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1484642759505},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1484642759505},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1484642759505},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"bd19a6c9f07f39f976e30f6b3a9170ea2ccdb953","modified":1484642758833},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"cd2def16d31feb234be27dcdce2a919f70cc6919","modified":1484642759411},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"0d9a4ae2e4ab418453e0f81b8fb1ad4b856f91d4","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"e28c805011f65b54060f03be90ec5a23714c4985","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"74e9989a10fc682388cbd25ff7df0d7d4025fb8c","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"011d5828b4972b2df0b429794b4466ba5bc1b49e","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1484642759427},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1484642759443},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1484642759443},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1484642759458},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1484642759458},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1484642759489},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1484642759489},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1484642759505},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1484642759474},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1484642759505},{"_id":"themes/next/.git/objects/pack/pack-00f07f1de24eae5e11a6eafe2ba682e19a17d816.pack","hash":"40c8757daa949da2de470b088593680ae25c22d1","modified":1484642758552}],"Category":[{"name":"第三方框架使用","_id":"ciy8kkvkx0001co1c2ppgd08q"},{"name":"android5.0","_id":"ciy8kkvou0008co1cxfgixfd3"}],"Data":[],"Page":[{"title":"categories","date":"2017-01-18T06:31:43.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-01-18 14:31:43\ntype: \"categories\"\n---\n","updated":"2017-01-18T06:32:31.062Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ciy8kkvou0006co1cj5ss7v22","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-01-18T06:28:34.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-01-18 14:28:34\ntype: \"tags\"\n---\n","updated":"2017-01-18T06:29:06.845Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ciy8kkvou0007co1cnb1td6eg","content":"","excerpt":"","more":""}],"Post":[{"title":"aboout_dagger2","date":"2017-01-22T02:38:08.000Z","updated":"2017-01-22T02:38:08.000Z","_content":"\n## dagger2 简介\n> dagger2 是一个依赖注入框架，能够使项目更加的解耦。\n\n\n## 如何添加到项目中\n\n> 1 在project的build.gradle里面添加apt插件。\n```java\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.2'\n\n        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n```\n> 2 在app的中的build.gradle文件中添加配置\n```java\napply plugin: 'com.android.application'\napply plugin: 'com.neenbedankt.android-apt'//应用添加的插件。\n\nandroid {\n    compileSdkVersion 25\n    buildToolsVersion \"25.0.2\"\n    defaultConfig {\n        applicationId \"com.hhly.dagger2sample\"\n        minSdkVersion 15\n        targetSdkVersion 25\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    compile 'com.android.support:appcompat-v7:25.1.0'\n    compile 'com.android.support:design:25.1.0'\n    testCompile 'junit:junit:4.12'\n    apt 'com.google.dagger:dagger-compiler:2.7'//加入dagger2的依赖。\n    compile 'com.google.dagger:dagger:2.7'// 加入dagger2的依赖。\n    provided 'javax.annotation:jsr250-api:1.0'//加入dagger2的依赖。\n}\n}\n```\n## 依赖注入简介\n> 依赖注入：就是目标类（目标类指的是这个类的成员变量中有其他类的对象）中所依赖的其他的类的初始化过程，\n不是通过手动编码的方式创建，而是通过技术手段可以把其他的类的已经初始化好的实例自动注入到目标类中。\n\n```java\n class A{\n       B b = new B(...);\n       C c = new C();\n       D d = new D(new E());\n       F f = new F(.....);\n }\n```\n\n>上面的代码中class A就是指的目标类，对于class E来说,class D是class E的目标类，同时,class D又是class A的成员变量。\n\n>那么通过依赖注入，我们就可以这样写。\n\n```java\nclass A{\n        @Inject\n        B b;\n   }\n\n   class B{\n       @Inject\n       B(){\n       }\n   }\n```\n\n>通过对class A中的成员变量b，以及class B中的构造方法，添加@inject注解。我们就让他们之间有了一种无形的联系，那么怎么把这种\n无形的联系变成有形的联系呢，这个时候我们就需要用到另外一个注解@Component\n\n### Component简介\n\n>Component也是一个注解类，一个类要想是Component，必须用Component注解来标注该类，并且该类是接口或抽象类\nComponent需要引用到目标类的实例，Component会查找目标类中用Inject注解标注的属性，\n查找到相应的属性后会接着查找该属性对应的用Inject标注的构造函数（这时候就发生联系了），\n剩下的工作就是初始化该属性的实例并把实例进行赋值。看代码：\n\n> 1,建立component对象。\n\n```java\n@Component\npublic interface FirstComponent {\n\n    //对scorllingActivity进行依赖注入。\n    void injectScrollingActivity(ScrollingActivity activity);\n\n}\n\n```\n\n> 2,在目标类中，对FirstComponent进行实例化，并进行依赖注入操作。\n```java\n\n    @Inject\n    FirstStudent mFirstStudent;\n\n    private FirstComponent mFirstComponent;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_scrolling);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        //建立联系\n        mFirstComponent = DaggerFirstComponent.builder().build();\n        mFirstComponent.injectScrollingActivity(this);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"student age is\" + mFirstStudent.age, Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n    }\n```\n> 到此，通过component,进行依赖注入，不需要new对象，就能够获取到FirstStudent的实例，但是现在有这样一种情况，如果是我们自己的类，我们当然可以在我们的构造方法加上@Inject注解\n但是我们在实际的开发中，经常会需要引用第三方的libs,这个时候我们需要实例化某个类，就没有办法在构造方法上加上@inject注解了。这个时候，我们就要用到@Module 和@Provides注解了\n\n### Module和Provides\n>Module 和 Provide主要就是为了解决第三方包的依赖注入问题，当然，一般我们自己写的类也会通过Module的形式进行注入，方便管理，一个可以同时提供几个Module,\nModule里面提供相关类的实例。接下来看代码。\n\n>首先，写一个类，加上@Module注解。然后在里面定义方法，提供相关的实例。这里我们以Gson为例\n```java\n//第三方的类\n@Module\npublic class ThirdLibModule {\n\n\n    @Provides\n    Gson provideGson(){\n        return new Gson();\n    }\n\n}\n\n//自己定义的类\n@Module\npublic class FirstModule {\n\n    @Provides\n    FirstStudent provideStudent(){\n        return new FirstStudent(40);\n    }\n}\n\n```\n\n>接下来在component里面添加Module\n```java\n@Component(modules = {ThirdLibModule.class, FirstModule.class})\npublic interface ThirdLibComponent {\n\n    void injectScrollingActivity(ScrollingActivity activity);\n\n}\n```\n\n>最后在目标类中实例化Component,并注入目标类。\n\n```java\npackage com.hhly.dagger2sample;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport com.google.gson.Gson;\nimport com.hhly.dagger2sample.bean.FirstStudent;\nimport com.hhly.dagger2sample.bean.GsonTestStudent;\nimport com.hhly.dagger2sample.di.component.DaggerThirdLibComponent;\nimport com.hhly.dagger2sample.di.component.FirstComponent;\nimport com.hhly.dagger2sample.di.component.ThirdLibComponent;\nimport com.hhly.dagger2sample.di.module.ThirdLibModule;\n\nimport javax.inject.Inject;\n\npublic class ScrollingActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private String mStudentJson = \"{\\n\" +\n            \"    \\\"name\\\": \\\"Jack\\\",\\n\" +\n            \"    \\\"age\\\": 18,\\n\" +\n            \"    \\\"isBoy\\\": true\\n\" +\n            \"}\";\n\n    @Inject\n    FirstStudent mFirstStudent;\n    @Inject\n    Gson mGson;\n\n    private FirstComponent mFirstComponent;\n    private ThirdLibComponent mThirdLibComponent;\n    private TextView mShowContent;\n    private GsonTestStudent mGsonTestStudent;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_scrolling);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        //使用component直接建立联系\n        /*mFirstComponent = DaggerFirstComponent.builder().build();\n        mFirstComponent.injectScrollingActivity(this);*/\n\n        //使用module方式提供实例\n        mThirdLibComponent = DaggerThirdLibComponent.builder()\n                .thirdLibModule(new ThirdLibModule())\n                .build();\n\n        mThirdLibComponent.injectScrollingActivity(this);\n\n         mGsonTestStudent = mGson.fromJson(mStudentJson, GsonTestStudent.class);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(this);\n\n        Button injectFirst = (Button) findViewById(R.id.inject_first_student);\n        injectFirst.setOnClickListener(this);\n\n        Button injectModule = (Button) findViewById(R.id.inject_with_module);\n        injectModule.setOnClickListener(this);\n\n        mShowContent = (TextView) findViewById(R.id.show_content);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_scrolling, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId()) {\n            case R.id.fab:\n                Snackbar.make(v, \"dagger2\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n                break;\n            case R.id.inject_first_student:\n                mShowContent.setText(\"\");\n                break;\n            case R.id.inject_with_module:\n                mShowContent.setText(mGsonTestStudent.toString()+\"///\"+mFirstStudent.toString());\n                break;\n        }\n    }\n}\n\n```\n\n#### 注意:由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug,这个bug要注意。所以把代码注释掉。\n\n```java\n@Component()\npublic interface FirstComponent {\n\n    /**\n     * 注意一个类不能同时被两个component注入，因为这些东西是在编译的时候生成的，那么在编译的时候，你一个类同时\n     * 被两个component注入，那目标类会不知道去哪个component里面找，于是就去第一个找，结果找不到，于是就会\n     * 报错。\n     */\n   /* void injectScrollingActivity(ScrollingActivity activity);*/\n}\n```\n\n#### 第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\n\n","source":"_posts/aboout-dagger2.md","raw":"---\ntitle: aboout_dagger2\ndate: 2017-01-22 10:38:08\nupdated: 2017-01-22 10:38:08\ncategories: [第三方框架使用] \ntags: [dagger2]\n\n---\n\n## dagger2 简介\n> dagger2 是一个依赖注入框架，能够使项目更加的解耦。\n\n\n## 如何添加到项目中\n\n> 1 在project的build.gradle里面添加apt插件。\n```java\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.2'\n\n        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n```\n> 2 在app的中的build.gradle文件中添加配置\n```java\napply plugin: 'com.android.application'\napply plugin: 'com.neenbedankt.android-apt'//应用添加的插件。\n\nandroid {\n    compileSdkVersion 25\n    buildToolsVersion \"25.0.2\"\n    defaultConfig {\n        applicationId \"com.hhly.dagger2sample\"\n        minSdkVersion 15\n        targetSdkVersion 25\n        versionCode 1\n        versionName \"1.0\"\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    compile fileTree(dir: 'libs', include: ['*.jar'])\n    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {\n        exclude group: 'com.android.support', module: 'support-annotations'\n    })\n    compile 'com.android.support:appcompat-v7:25.1.0'\n    compile 'com.android.support:design:25.1.0'\n    testCompile 'junit:junit:4.12'\n    apt 'com.google.dagger:dagger-compiler:2.7'//加入dagger2的依赖。\n    compile 'com.google.dagger:dagger:2.7'// 加入dagger2的依赖。\n    provided 'javax.annotation:jsr250-api:1.0'//加入dagger2的依赖。\n}\n}\n```\n## 依赖注入简介\n> 依赖注入：就是目标类（目标类指的是这个类的成员变量中有其他类的对象）中所依赖的其他的类的初始化过程，\n不是通过手动编码的方式创建，而是通过技术手段可以把其他的类的已经初始化好的实例自动注入到目标类中。\n\n```java\n class A{\n       B b = new B(...);\n       C c = new C();\n       D d = new D(new E());\n       F f = new F(.....);\n }\n```\n\n>上面的代码中class A就是指的目标类，对于class E来说,class D是class E的目标类，同时,class D又是class A的成员变量。\n\n>那么通过依赖注入，我们就可以这样写。\n\n```java\nclass A{\n        @Inject\n        B b;\n   }\n\n   class B{\n       @Inject\n       B(){\n       }\n   }\n```\n\n>通过对class A中的成员变量b，以及class B中的构造方法，添加@inject注解。我们就让他们之间有了一种无形的联系，那么怎么把这种\n无形的联系变成有形的联系呢，这个时候我们就需要用到另外一个注解@Component\n\n### Component简介\n\n>Component也是一个注解类，一个类要想是Component，必须用Component注解来标注该类，并且该类是接口或抽象类\nComponent需要引用到目标类的实例，Component会查找目标类中用Inject注解标注的属性，\n查找到相应的属性后会接着查找该属性对应的用Inject标注的构造函数（这时候就发生联系了），\n剩下的工作就是初始化该属性的实例并把实例进行赋值。看代码：\n\n> 1,建立component对象。\n\n```java\n@Component\npublic interface FirstComponent {\n\n    //对scorllingActivity进行依赖注入。\n    void injectScrollingActivity(ScrollingActivity activity);\n\n}\n\n```\n\n> 2,在目标类中，对FirstComponent进行实例化，并进行依赖注入操作。\n```java\n\n    @Inject\n    FirstStudent mFirstStudent;\n\n    private FirstComponent mFirstComponent;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_scrolling);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        //建立联系\n        mFirstComponent = DaggerFirstComponent.builder().build();\n        mFirstComponent.injectScrollingActivity(this);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"student age is\" + mFirstStudent.age, Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n    }\n```\n> 到此，通过component,进行依赖注入，不需要new对象，就能够获取到FirstStudent的实例，但是现在有这样一种情况，如果是我们自己的类，我们当然可以在我们的构造方法加上@Inject注解\n但是我们在实际的开发中，经常会需要引用第三方的libs,这个时候我们需要实例化某个类，就没有办法在构造方法上加上@inject注解了。这个时候，我们就要用到@Module 和@Provides注解了\n\n### Module和Provides\n>Module 和 Provide主要就是为了解决第三方包的依赖注入问题，当然，一般我们自己写的类也会通过Module的形式进行注入，方便管理，一个可以同时提供几个Module,\nModule里面提供相关类的实例。接下来看代码。\n\n>首先，写一个类，加上@Module注解。然后在里面定义方法，提供相关的实例。这里我们以Gson为例\n```java\n//第三方的类\n@Module\npublic class ThirdLibModule {\n\n\n    @Provides\n    Gson provideGson(){\n        return new Gson();\n    }\n\n}\n\n//自己定义的类\n@Module\npublic class FirstModule {\n\n    @Provides\n    FirstStudent provideStudent(){\n        return new FirstStudent(40);\n    }\n}\n\n```\n\n>接下来在component里面添加Module\n```java\n@Component(modules = {ThirdLibModule.class, FirstModule.class})\npublic interface ThirdLibComponent {\n\n    void injectScrollingActivity(ScrollingActivity activity);\n\n}\n```\n\n>最后在目标类中实例化Component,并注入目标类。\n\n```java\npackage com.hhly.dagger2sample;\n\nimport android.os.Bundle;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.view.Menu;\nimport android.view.MenuItem;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.TextView;\n\nimport com.google.gson.Gson;\nimport com.hhly.dagger2sample.bean.FirstStudent;\nimport com.hhly.dagger2sample.bean.GsonTestStudent;\nimport com.hhly.dagger2sample.di.component.DaggerThirdLibComponent;\nimport com.hhly.dagger2sample.di.component.FirstComponent;\nimport com.hhly.dagger2sample.di.component.ThirdLibComponent;\nimport com.hhly.dagger2sample.di.module.ThirdLibModule;\n\nimport javax.inject.Inject;\n\npublic class ScrollingActivity extends AppCompatActivity implements View.OnClickListener {\n\n    private String mStudentJson = \"{\\n\" +\n            \"    \\\"name\\\": \\\"Jack\\\",\\n\" +\n            \"    \\\"age\\\": 18,\\n\" +\n            \"    \\\"isBoy\\\": true\\n\" +\n            \"}\";\n\n    @Inject\n    FirstStudent mFirstStudent;\n    @Inject\n    Gson mGson;\n\n    private FirstComponent mFirstComponent;\n    private ThirdLibComponent mThirdLibComponent;\n    private TextView mShowContent;\n    private GsonTestStudent mGsonTestStudent;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_scrolling);\n        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n        //使用component直接建立联系\n        /*mFirstComponent = DaggerFirstComponent.builder().build();\n        mFirstComponent.injectScrollingActivity(this);*/\n\n        //使用module方式提供实例\n        mThirdLibComponent = DaggerThirdLibComponent.builder()\n                .thirdLibModule(new ThirdLibModule())\n                .build();\n\n        mThirdLibComponent.injectScrollingActivity(this);\n\n         mGsonTestStudent = mGson.fromJson(mStudentJson, GsonTestStudent.class);\n\n        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(this);\n\n        Button injectFirst = (Button) findViewById(R.id.inject_first_student);\n        injectFirst.setOnClickListener(this);\n\n        Button injectModule = (Button) findViewById(R.id.inject_with_module);\n        injectModule.setOnClickListener(this);\n\n        mShowContent = (TextView) findViewById(R.id.show_content);\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.menu_scrolling, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n        return super.onOptionsItemSelected(item);\n    }\n\n    @Override\n    public void onClick(View v) {\n        switch (v.getId()) {\n            case R.id.fab:\n                Snackbar.make(v, \"dagger2\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n                break;\n            case R.id.inject_first_student:\n                mShowContent.setText(\"\");\n                break;\n            case R.id.inject_with_module:\n                mShowContent.setText(mGsonTestStudent.toString()+\"///\"+mFirstStudent.toString());\n                break;\n        }\n    }\n}\n\n```\n\n#### 注意:由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug,这个bug要注意。所以把代码注释掉。\n\n```java\n@Component()\npublic interface FirstComponent {\n\n    /**\n     * 注意一个类不能同时被两个component注入，因为这些东西是在编译的时候生成的，那么在编译的时候，你一个类同时\n     * 被两个component注入，那目标类会不知道去哪个component里面找，于是就去第一个找，结果找不到，于是就会\n     * 报错。\n     */\n   /* void injectScrollingActivity(ScrollingActivity activity);*/\n}\n```\n\n#### 第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\n\n","slug":"aboout-dagger2","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"ciy8kkvkh0000co1cyvv8q15m","content":"<h2 id=\"dagger2-简介\"><a href=\"#dagger2-简介\" class=\"headerlink\" title=\"dagger2 简介\"></a>dagger2 简介</h2><blockquote>\n<p>dagger2 是一个依赖注入框架，能够使项目更加的解耦。</p>\n</blockquote>\n<h2 id=\"如何添加到项目中\"><a href=\"#如何添加到项目中\" class=\"headerlink\" title=\"如何添加到项目中\"></a>如何添加到项目中</h2><blockquote>\n<p>1 在project的build.gradle里面添加apt插件。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">buildscript &#123;</div><div class=\"line\">    repositories &#123;</div><div class=\"line\">        jcenter()</div><div class=\"line\">    &#125;</div><div class=\"line\">    dependencies &#123;</div><div class=\"line\">        classpath <span class=\"string\">'com.android.tools.build:gradle:2.2.2'</span></div><div class=\"line\"></div><div class=\"line\">        classpath <span class=\"string\">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span></div><div class=\"line\">        <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></div><div class=\"line\">        <span class=\"comment\">// in the individual module build.gradle files</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2 在app的中的build.gradle文件中添加配置<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></div><div class=\"line\">apply plugin: <span class=\"string\">'com.neenbedankt.android-apt'</span><span class=\"comment\">//应用添加的插件。</span></div><div class=\"line\"></div><div class=\"line\">android &#123;</div><div class=\"line\">    compileSdkVersion <span class=\"number\">25</span></div><div class=\"line\">    buildToolsVersion <span class=\"string\">\"25.0.2\"</span></div><div class=\"line\">    defaultConfig &#123;</div><div class=\"line\">        applicationId <span class=\"string\">\"com.hhly.dagger2sample\"</span></div><div class=\"line\">        minSdkVersion <span class=\"number\">15</span></div><div class=\"line\">        targetSdkVersion <span class=\"number\">25</span></div><div class=\"line\">        versionCode <span class=\"number\">1</span></div><div class=\"line\">        versionName <span class=\"string\">\"1.0\"</span></div><div class=\"line\">        testInstrumentationRunner <span class=\"string\">\"android.support.test.runner.AndroidJUnitRunner\"</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    buildTypes &#123;</div><div class=\"line\">        release &#123;</div><div class=\"line\">            <span class=\"function\">minifyEnabled <span class=\"keyword\">false</span></span></div><div class=\"line\">            proguardFiles <span class=\"title\">getDefaultProguardFile</span><span class=\"params\">(<span class=\"string\">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">dependencies &#123;</div><div class=\"line\">    <span class=\"function\">compile <span class=\"title\">fileTree</span><span class=\"params\">(dir: <span class=\"string\">'libs'</span>, include: [<span class=\"string\">'*.jar'</span>])</span></span></div><div class=\"line\">    <span class=\"title\">androidTestCompile</span><span class=\"params\">(<span class=\"string\">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</span></div><div class=\"line\">        exclude group: <span class=\"string\">'com.android.support'</span>, <span class=\"keyword\">module</span>: <span class=\"string\">'support-annotations'</span></div><div class=\"line\">    &#125;)</div><div class=\"line\">    compile 'com.android.support:appcompat-v7:25.1.0'</div><div class=\"line\">    compile 'com.android.support:design:25.1.0'</div><div class=\"line\">    testCompile 'junit:junit:4.12'</div><div class=\"line\">    apt 'com.google.dagger:dagger-compiler:2.7'<span class=\"comment\">//加入dagger2的依赖。</span></div><div class=\"line\">    compile 'com.google.dagger:dagger:2.7'<span class=\"comment\">// 加入dagger2的依赖。</span></div><div class=\"line\">    provided 'javax.annotation:jsr250-api:1.0'<span class=\"comment\">//加入dagger2的依赖。</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"依赖注入简介\"><a href=\"#依赖注入简介\" class=\"headerlink\" title=\"依赖注入简介\"></a>依赖注入简介</h2><blockquote>\n<p>依赖注入：就是目标类（目标类指的是这个类的成员变量中有其他类的对象）中所依赖的其他的类的初始化过程，<br>不是通过手动编码的方式创建，而是通过技术手段可以把其他的类的已经初始化好的实例自动注入到目标类中。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span></span>&#123;</div><div class=\"line\">      B b = <span class=\"keyword\">new</span> B(...);</div><div class=\"line\">      C c = <span class=\"keyword\">new</span> C();</div><div class=\"line\">      D d = <span class=\"keyword\">new</span> D(<span class=\"keyword\">new</span> E());</div><div class=\"line\">      F f = <span class=\"keyword\">new</span> F(.....);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>上面的代码中class A就是指的目标类，对于class E来说,class D是class E的目标类，同时,class D又是class A的成员变量。</p>\n<p>那么通过依赖注入，我们就可以这样写。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span></span>&#123;</div><div class=\"line\">        <span class=\"meta\">@Inject</span></div><div class=\"line\">        B b;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span></span>&#123;</div><div class=\"line\">       <span class=\"meta\">@Inject</span></div><div class=\"line\">       B()&#123;</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>通过对class A中的成员变量b，以及class B中的构造方法，添加@inject注解。我们就让他们之间有了一种无形的联系，那么怎么把这种<br>无形的联系变成有形的联系呢，这个时候我们就需要用到另外一个注解@Component</p>\n</blockquote>\n<h3 id=\"Component简介\"><a href=\"#Component简介\" class=\"headerlink\" title=\"Component简介\"></a>Component简介</h3><blockquote>\n<p>Component也是一个注解类，一个类要想是Component，必须用Component注解来标注该类，并且该类是接口或抽象类<br>Component需要引用到目标类的实例，Component会查找目标类中用Inject注解标注的属性，<br>查找到相应的属性后会接着查找该属性对应的用Inject标注的构造函数（这时候就发生联系了），<br>剩下的工作就是初始化该属性的实例并把实例进行赋值。看代码：</p>\n<p>1,建立component对象。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FirstComponent</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//对scorllingActivity进行依赖注入。</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">injectScrollingActivity</span><span class=\"params\">(ScrollingActivity activity)</span></span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>2,在目标类中，对FirstComponent进行实例化，并进行依赖注入操作。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Inject</span></div><div class=\"line\">FirstStudent mFirstStudent;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> FirstComponent mFirstComponent;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    setContentView(R.layout.activity_scrolling);</div><div class=\"line\">    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class=\"line\">    setSupportActionBar(toolbar);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//建立联系</span></div><div class=\"line\">    mFirstComponent = DaggerFirstComponent.builder().build();</div><div class=\"line\">    mFirstComponent.injectScrollingActivity(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">    FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</div><div class=\"line\">    fab.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">            Snackbar.make(view, <span class=\"string\">\"student age is\"</span> + mFirstStudent.age, Snackbar.LENGTH_LONG)</div><div class=\"line\">                    .setAction(<span class=\"string\">\"Action\"</span>, <span class=\"keyword\">null</span>).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>到此，通过component,进行依赖注入，不需要new对象，就能够获取到FirstStudent的实例，但是现在有这样一种情况，如果是我们自己的类，我们当然可以在我们的构造方法加上@Inject注解<br>但是我们在实际的开发中，经常会需要引用第三方的libs,这个时候我们需要实例化某个类，就没有办法在构造方法上加上@inject注解了。这个时候，我们就要用到@Module 和@Provides注解了</p>\n</blockquote>\n<h3 id=\"Module和Provides\"><a href=\"#Module和Provides\" class=\"headerlink\" title=\"Module和Provides\"></a>Module和Provides</h3><blockquote>\n<p>Module 和 Provide主要就是为了解决第三方包的依赖注入问题，当然，一般我们自己写的类也会通过Module的形式进行注入，方便管理，一个可以同时提供几个Module,<br>Module里面提供相关类的实例。接下来看代码。</p>\n<p>首先，写一个类，加上@Module注解。然后在里面定义方法，提供相关的实例。这里我们以Gson为例<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//第三方的类</span></div><div class=\"line\"><span class=\"meta\">@Module</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThirdLibModule</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Provides</span></div><div class=\"line\">    <span class=\"function\">Gson <span class=\"title\">provideGson</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Gson();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//自己定义的类</span></div><div class=\"line\"><span class=\"meta\">@Module</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FirstModule</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Provides</span></div><div class=\"line\">    <span class=\"function\">FirstStudent <span class=\"title\">provideStudent</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> FirstStudent(<span class=\"number\">40</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>接下来在component里面添加Module<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Component</span>(modules = &#123;ThirdLibModule.class, FirstModule.class&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ThirdLibComponent</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">injectScrollingActivity</span><span class=\"params\">(ScrollingActivity activity)</span></span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>最后在目标类中实例化Component,并注入目标类。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.hhly.dagger2sample;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.FloatingActionButton;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.Snackbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.AppCompatActivity;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.v7.widget.Toolbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.Menu;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.MenuItem;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.View;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.Button;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.google.gson.Gson;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.bean.FirstStudent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.bean.GsonTestStudent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.component.DaggerThirdLibComponent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.component.FirstComponent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.component.ThirdLibComponent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.<span class=\"keyword\">module</span>.ThirdLibModule;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.inject.Inject;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ScrollingActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> <span class=\"keyword\">implements</span> <span class=\"title\">View</span>.<span class=\"title\">OnClickListener</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> String mStudentJson = <span class=\"string\">\"&#123;\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"name\\\": \\\"Jack\\\",\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"age\\\": 18,\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"isBoy\\\": true\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"&#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Inject</span></div><div class=\"line\">    FirstStudent mFirstStudent;</div><div class=\"line\">    <span class=\"meta\">@Inject</span></div><div class=\"line\">    Gson mGson;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> FirstComponent mFirstComponent;</div><div class=\"line\">    <span class=\"keyword\">private</span> ThirdLibComponent mThirdLibComponent;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView mShowContent;</div><div class=\"line\">    <span class=\"keyword\">private</span> GsonTestStudent mGsonTestStudent;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_scrolling);</div><div class=\"line\">        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class=\"line\">        setSupportActionBar(toolbar);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用component直接建立联系</span></div><div class=\"line\">        <span class=\"comment\">/*mFirstComponent = DaggerFirstComponent.builder().build();</span></div><div class=\"line\">        mFirstComponent.injectScrollingActivity(this);*/</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用module方式提供实例</span></div><div class=\"line\">        mThirdLibComponent = DaggerThirdLibComponent.builder()</div><div class=\"line\">                .thirdLibModule(<span class=\"keyword\">new</span> ThirdLibModule())</div><div class=\"line\">                .build();</div><div class=\"line\"></div><div class=\"line\">        mThirdLibComponent.injectScrollingActivity(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">         mGsonTestStudent = mGson.fromJson(mStudentJson, GsonTestStudent.class);</div><div class=\"line\"></div><div class=\"line\">        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</div><div class=\"line\">        fab.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">        Button injectFirst = (Button) findViewById(R.id.inject_first_student);</div><div class=\"line\">        injectFirst.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">        Button injectModule = (Button) findViewById(R.id.inject_with_module);</div><div class=\"line\">        injectModule.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">        mShowContent = (TextView) findViewById(R.id.show_content);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateOptionsMenu</span><span class=\"params\">(Menu menu)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// Inflate the menu; this adds items to the action bar if it is present.</span></div><div class=\"line\">        getMenuInflater().inflate(R.menu.menu_scrolling, menu);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onOptionsItemSelected</span><span class=\"params\">(MenuItem item)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// Handle action bar item clicks here. The action bar will</span></div><div class=\"line\">        <span class=\"comment\">// automatically handle clicks on the Home/Up button, so long</span></div><div class=\"line\">        <span class=\"comment\">// as you specify a parent activity in AndroidManifest.xml.</span></div><div class=\"line\">        <span class=\"keyword\">int</span> id = item.getItemId();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//noinspection SimplifiableIfStatement</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (id == R.id.action_settings) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onOptionsItemSelected(item);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (v.getId()) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> R.id.fab:</div><div class=\"line\">                Snackbar.make(v, <span class=\"string\">\"dagger2\"</span>, Snackbar.LENGTH_LONG)</div><div class=\"line\">                        .setAction(<span class=\"string\">\"Action\"</span>, <span class=\"keyword\">null</span>).show();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> R.id.inject_first_student:</div><div class=\"line\">                mShowContent.setText(<span class=\"string\">\"\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> R.id.inject_with_module:</div><div class=\"line\">                mShowContent.setText(mGsonTestStudent.toString()+<span class=\"string\">\"///\"</span>+mFirstStudent.toString());</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"注意-由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug-这个bug要注意。所以把代码注释掉。\"><a href=\"#注意-由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug-这个bug要注意。所以把代码注释掉。\" class=\"headerlink\" title=\"注意:由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug,这个bug要注意。所以把代码注释掉。\"></a>注意:由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug,这个bug要注意。所以把代码注释掉。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Component</span>()</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FirstComponent</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</span></div><div class=\"line\">     * 注意一个类不能同时被两个component注入，因为这些东西是在编译的时候生成的，那么在编译的时候，你一个类同时</div><div class=\"line\">     * 被两个component注入，那目标类会不知道去哪个component里面找，于是就去第一个找，结果找不到，于是就会</div><div class=\"line\">     * 报错。</div><div class=\"line\">     */</div><div class=\"line\">   <span class=\"comment\">/* void injectScrollingActivity(ScrollingActivity activity);*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\"><a href=\"#第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\" class=\"headerlink\" title=\"第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\"></a>第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。</h4>","excerpt":"","more":"<h2 id=\"dagger2-简介\"><a href=\"#dagger2-简介\" class=\"headerlink\" title=\"dagger2 简介\"></a>dagger2 简介</h2><blockquote>\n<p>dagger2 是一个依赖注入框架，能够使项目更加的解耦。</p>\n</blockquote>\n<h2 id=\"如何添加到项目中\"><a href=\"#如何添加到项目中\" class=\"headerlink\" title=\"如何添加到项目中\"></a>如何添加到项目中</h2><blockquote>\n<p>1 在project的build.gradle里面添加apt插件。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">buildscript &#123;</div><div class=\"line\">    repositories &#123;</div><div class=\"line\">        jcenter()</div><div class=\"line\">    &#125;</div><div class=\"line\">    dependencies &#123;</div><div class=\"line\">        classpath <span class=\"string\">'com.android.tools.build:gradle:2.2.2'</span></div><div class=\"line\"></div><div class=\"line\">        classpath <span class=\"string\">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span></div><div class=\"line\">        <span class=\"comment\">// <span class=\"doctag\">NOTE:</span> Do not place your application dependencies here; they belong</span></div><div class=\"line\">        <span class=\"comment\">// in the individual module build.gradle files</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>2 在app的中的build.gradle文件中添加配置<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></div><div class=\"line\">apply plugin: <span class=\"string\">'com.neenbedankt.android-apt'</span><span class=\"comment\">//应用添加的插件。</span></div><div class=\"line\"></div><div class=\"line\">android &#123;</div><div class=\"line\">    compileSdkVersion <span class=\"number\">25</span></div><div class=\"line\">    buildToolsVersion <span class=\"string\">\"25.0.2\"</span></div><div class=\"line\">    defaultConfig &#123;</div><div class=\"line\">        applicationId <span class=\"string\">\"com.hhly.dagger2sample\"</span></div><div class=\"line\">        minSdkVersion <span class=\"number\">15</span></div><div class=\"line\">        targetSdkVersion <span class=\"number\">25</span></div><div class=\"line\">        versionCode <span class=\"number\">1</span></div><div class=\"line\">        versionName <span class=\"string\">\"1.0\"</span></div><div class=\"line\">        testInstrumentationRunner <span class=\"string\">\"android.support.test.runner.AndroidJUnitRunner\"</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    buildTypes &#123;</div><div class=\"line\">        release &#123;</div><div class=\"line\">            <span class=\"function\">minifyEnabled <span class=\"keyword\">false</span></div><div class=\"line\">            proguardFiles <span class=\"title\">getDefaultProguardFile</span><span class=\"params\">(<span class=\"string\">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">dependencies </span>&#123;</div><div class=\"line\">    <span class=\"function\">compile <span class=\"title\">fileTree</span><span class=\"params\">(dir: <span class=\"string\">'libs'</span>, include: [<span class=\"string\">'*.jar'</span>])</span></div><div class=\"line\">    <span class=\"title\">androidTestCompile</span><span class=\"params\">(<span class=\"string\">'com.android.support.test.espresso:espresso-core:2.2.2'</span>, &#123;</div><div class=\"line\">        exclude group: <span class=\"string\">'com.android.support'</span>, <span class=\"keyword\">module</span>: <span class=\"string\">'support-annotations'</span></div><div class=\"line\">    &#125;)</span></div><div class=\"line\">    compile 'com.android.support:appcompat-v7:25.1.0'</div><div class=\"line\">    compile 'com.android.support:design:25.1.0'</div><div class=\"line\">    testCompile 'junit:junit:4.12'</div><div class=\"line\">    apt 'com.google.dagger:dagger-compiler:2.7'<span class=\"comment\">//加入dagger2的依赖。</span></div><div class=\"line\">    compile 'com.google.dagger:dagger:2.7'<span class=\"comment\">// 加入dagger2的依赖。</span></div><div class=\"line\">    provided 'javax.annotation:jsr250-api:1.0'<span class=\"comment\">//加入dagger2的依赖。</span></div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</span></div></pre></td></tr></table></figure></p>\n</blockquote>\n<h2 id=\"依赖注入简介\"><a href=\"#依赖注入简介\" class=\"headerlink\" title=\"依赖注入简介\"></a>依赖注入简介</h2><blockquote>\n<p>依赖注入：就是目标类（目标类指的是这个类的成员变量中有其他类的对象）中所依赖的其他的类的初始化过程，<br>不是通过手动编码的方式创建，而是通过技术手段可以把其他的类的已经初始化好的实例自动注入到目标类中。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span></span>&#123;</div><div class=\"line\">      B b = <span class=\"keyword\">new</span> B(...);</div><div class=\"line\">      C c = <span class=\"keyword\">new</span> C();</div><div class=\"line\">      D d = <span class=\"keyword\">new</span> D(<span class=\"keyword\">new</span> E());</div><div class=\"line\">      F f = <span class=\"keyword\">new</span> F(.....);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>上面的代码中class A就是指的目标类，对于class E来说,class D是class E的目标类，同时,class D又是class A的成员变量。</p>\n<p>那么通过依赖注入，我们就可以这样写。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">A</span></span>&#123;</div><div class=\"line\">        <span class=\"meta\">@Inject</span></div><div class=\"line\">        B b;</div><div class=\"line\">   &#125;</div><div class=\"line\"></div><div class=\"line\">   <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">B</span></span>&#123;</div><div class=\"line\">       <span class=\"meta\">@Inject</span></div><div class=\"line\">       B()&#123;</div><div class=\"line\">       &#125;</div><div class=\"line\">   &#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>通过对class A中的成员变量b，以及class B中的构造方法，添加@inject注解。我们就让他们之间有了一种无形的联系，那么怎么把这种<br>无形的联系变成有形的联系呢，这个时候我们就需要用到另外一个注解@Component</p>\n</blockquote>\n<h3 id=\"Component简介\"><a href=\"#Component简介\" class=\"headerlink\" title=\"Component简介\"></a>Component简介</h3><blockquote>\n<p>Component也是一个注解类，一个类要想是Component，必须用Component注解来标注该类，并且该类是接口或抽象类<br>Component需要引用到目标类的实例，Component会查找目标类中用Inject注解标注的属性，<br>查找到相应的属性后会接着查找该属性对应的用Inject标注的构造函数（这时候就发生联系了），<br>剩下的工作就是初始化该属性的实例并把实例进行赋值。看代码：</p>\n<p>1,建立component对象。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Component</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FirstComponent</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//对scorllingActivity进行依赖注入。</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">injectScrollingActivity</span><span class=\"params\">(ScrollingActivity activity)</span></span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<blockquote>\n<p>2,在目标类中，对FirstComponent进行实例化，并进行依赖注入操作。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Inject</span></div><div class=\"line\">FirstStudent mFirstStudent;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">private</span> FirstComponent mFirstComponent;</div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">@Override</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">    setContentView(R.layout.activity_scrolling);</div><div class=\"line\">    Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class=\"line\">    setSupportActionBar(toolbar);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">//建立联系</span></div><div class=\"line\">    mFirstComponent = DaggerFirstComponent.builder().build();</div><div class=\"line\">    mFirstComponent.injectScrollingActivity(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">    FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</div><div class=\"line\">    fab.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</div><div class=\"line\">        <span class=\"meta\">@Override</span></div><div class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View view)</span> </span>&#123;</div><div class=\"line\">            Snackbar.make(view, <span class=\"string\">\"student age is\"</span> + mFirstStudent.age, Snackbar.LENGTH_LONG)</div><div class=\"line\">                    .setAction(<span class=\"string\">\"Action\"</span>, <span class=\"keyword\">null</span>).show();</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>到此，通过component,进行依赖注入，不需要new对象，就能够获取到FirstStudent的实例，但是现在有这样一种情况，如果是我们自己的类，我们当然可以在我们的构造方法加上@Inject注解<br>但是我们在实际的开发中，经常会需要引用第三方的libs,这个时候我们需要实例化某个类，就没有办法在构造方法上加上@inject注解了。这个时候，我们就要用到@Module 和@Provides注解了</p>\n</blockquote>\n<h3 id=\"Module和Provides\"><a href=\"#Module和Provides\" class=\"headerlink\" title=\"Module和Provides\"></a>Module和Provides</h3><blockquote>\n<p>Module 和 Provide主要就是为了解决第三方包的依赖注入问题，当然，一般我们自己写的类也会通过Module的形式进行注入，方便管理，一个可以同时提供几个Module,<br>Module里面提供相关类的实例。接下来看代码。</p>\n<p>首先，写一个类，加上@Module注解。然后在里面定义方法，提供相关的实例。这里我们以Gson为例<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//第三方的类</span></div><div class=\"line\"><span class=\"meta\">@Module</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ThirdLibModule</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Provides</span></div><div class=\"line\">    <span class=\"function\">Gson <span class=\"title\">provideGson</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Gson();</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">//自己定义的类</span></div><div class=\"line\"><span class=\"meta\">@Module</span></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FirstModule</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Provides</span></div><div class=\"line\">    <span class=\"function\">FirstStudent <span class=\"title\">provideStudent</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> FirstStudent(<span class=\"number\">40</span>);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>接下来在component里面添加Module<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Component</span>(modules = &#123;ThirdLibModule.class, FirstModule.class&#125;)</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">ThirdLibComponent</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">injectScrollingActivity</span><span class=\"params\">(ScrollingActivity activity)</span></span>;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>最后在目标类中实例化Component,并注入目标类。</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">package</span> com.hhly.dagger2sample;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> android.os.Bundle;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.FloatingActionButton;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.design.widget.Snackbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.v7.app.AppCompatActivity;</div><div class=\"line\"><span class=\"keyword\">import</span> android.support.v7.widget.Toolbar;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.Menu;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.MenuItem;</div><div class=\"line\"><span class=\"keyword\">import</span> android.view.View;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.Button;</div><div class=\"line\"><span class=\"keyword\">import</span> android.widget.TextView;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> com.google.gson.Gson;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.bean.FirstStudent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.bean.GsonTestStudent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.component.DaggerThirdLibComponent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.component.FirstComponent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.component.ThirdLibComponent;</div><div class=\"line\"><span class=\"keyword\">import</span> com.hhly.dagger2sample.di.<span class=\"keyword\">module</span>.ThirdLibModule;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> javax.inject.Inject;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ScrollingActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> <span class=\"keyword\">implements</span> <span class=\"title\">View</span>.<span class=\"title\">OnClickListener</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> String mStudentJson = <span class=\"string\">\"&#123;\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"name\\\": \\\"Jack\\\",\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"age\\\": 18,\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"    \\\"isBoy\\\": true\\n\"</span> +</div><div class=\"line\">            <span class=\"string\">\"&#125;\"</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Inject</span></div><div class=\"line\">    FirstStudent mFirstStudent;</div><div class=\"line\">    <span class=\"meta\">@Inject</span></div><div class=\"line\">    Gson mGson;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> FirstComponent mFirstComponent;</div><div class=\"line\">    <span class=\"keyword\">private</span> ThirdLibComponent mThirdLibComponent;</div><div class=\"line\">    <span class=\"keyword\">private</span> TextView mShowContent;</div><div class=\"line\">    <span class=\"keyword\">private</span> GsonTestStudent mGsonTestStudent;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</div><div class=\"line\">        setContentView(R.layout.activity_scrolling);</div><div class=\"line\">        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class=\"line\">        setSupportActionBar(toolbar);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用component直接建立联系</span></div><div class=\"line\">        <span class=\"comment\">/*mFirstComponent = DaggerFirstComponent.builder().build();</div><div class=\"line\">        mFirstComponent.injectScrollingActivity(this);*/</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//使用module方式提供实例</span></div><div class=\"line\">        mThirdLibComponent = DaggerThirdLibComponent.builder()</div><div class=\"line\">                .thirdLibModule(<span class=\"keyword\">new</span> ThirdLibModule())</div><div class=\"line\">                .build();</div><div class=\"line\"></div><div class=\"line\">        mThirdLibComponent.injectScrollingActivity(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">         mGsonTestStudent = mGson.fromJson(mStudentJson, GsonTestStudent.class);</div><div class=\"line\"></div><div class=\"line\">        FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);</div><div class=\"line\">        fab.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">        Button injectFirst = (Button) findViewById(R.id.inject_first_student);</div><div class=\"line\">        injectFirst.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">        Button injectModule = (Button) findViewById(R.id.inject_with_module);</div><div class=\"line\">        injectModule.setOnClickListener(<span class=\"keyword\">this</span>);</div><div class=\"line\"></div><div class=\"line\">        mShowContent = (TextView) findViewById(R.id.show_content);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateOptionsMenu</span><span class=\"params\">(Menu menu)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// Inflate the menu; this adds items to the action bar if it is present.</span></div><div class=\"line\">        getMenuInflater().inflate(R.menu.menu_scrolling, menu);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onOptionsItemSelected</span><span class=\"params\">(MenuItem item)</span> </span>&#123;</div><div class=\"line\">        <span class=\"comment\">// Handle action bar item clicks here. The action bar will</span></div><div class=\"line\">        <span class=\"comment\">// automatically handle clicks on the Home/Up button, so long</span></div><div class=\"line\">        <span class=\"comment\">// as you specify a parent activity in AndroidManifest.xml.</span></div><div class=\"line\">        <span class=\"keyword\">int</span> id = item.getItemId();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//noinspection SimplifiableIfStatement</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (id == R.id.action_settings) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onOptionsItemSelected(item);</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"meta\">@Override</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (v.getId()) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> R.id.fab:</div><div class=\"line\">                Snackbar.make(v, <span class=\"string\">\"dagger2\"</span>, Snackbar.LENGTH_LONG)</div><div class=\"line\">                        .setAction(<span class=\"string\">\"Action\"</span>, <span class=\"keyword\">null</span>).show();</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> R.id.inject_first_student:</div><div class=\"line\">                mShowContent.setText(<span class=\"string\">\"\"</span>);</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> R.id.inject_with_module:</div><div class=\"line\">                mShowContent.setText(mGsonTestStudent.toString()+<span class=\"string\">\"///\"</span>+mFirstStudent.toString());</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"注意-由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug-这个bug要注意。所以把代码注释掉。\"><a href=\"#注意-由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug-这个bug要注意。所以把代码注释掉。\" class=\"headerlink\" title=\"注意:由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug,这个bug要注意。所以把代码注释掉。\"></a>注意:由于之前是通过注解的方式进行的依赖，所以FirstComponent中还保留着以下代码，会出bug,这个bug要注意。所以把代码注释掉。</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">@Component</span>()</div><div class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FirstComponent</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"comment\">/**</div><div class=\"line\">     * 注意一个类不能同时被两个component注入，因为这些东西是在编译的时候生成的，那么在编译的时候，你一个类同时</div><div class=\"line\">     * 被两个component注入，那目标类会不知道去哪个component里面找，于是就去第一个找，结果找不到，于是就会</div><div class=\"line\">     * 报错。</div><div class=\"line\">     */</span></div><div class=\"line\">   <span class=\"comment\">/* void injectScrollingActivity(ScrollingActivity activity);*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\"><a href=\"#第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\" class=\"headerlink\" title=\"第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。\"></a>第一篇先写这些，第二篇会接着介绍其他的注解以及其含义。</h4>"},{"title":"AppBarLayout的五种ScrollFlags","date":"2017-01-21T04:15:58.000Z","update":null,"_content":"\n## AppBarLayout的五种ScrollFlags。\n\n>ScrollFlags共有五种常量值供AppBarLayout的Children View使用，在xml布局文件中通过app:layout_scrollFlags设置，对应的值为：scroll，enterAlways，enterAlwaysCollapsed，snap，exitUntilCollapsed；\n\n### 先上代码。\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.design.widget.CoordinatorLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:context=\"com.hhly.collapesingdemo.ScrollingActivity\">\n\n    <android.support.design.widget.AppBarLayout\n        android:id=\"@+id/app_bar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"@dimen/app_bar_height\"\n        android:fitsSystemWindows=\"true\"\n        android:theme=\"@style/AppTheme.AppBarOverlay\">\n\n        <android.support.design.widget.CollapsingToolbarLayout\n            android:id=\"@+id/toolbar_layout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:minHeight=\"30dp\"\n            android:fitsSystemWindows=\"true\"\n            app:contentScrim=\"?attr/colorPrimary\"\n            app:layout_scrollFlags=\"scroll\">\n\n            <android.support.v7.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"?attr/actionBarSize\"\n                app:layout_collapseMode=\"pin\"\n                app:popupTheme=\"@style/AppTheme.PopupOverlay\"/>\n\n        </android.support.design.widget.CollapsingToolbarLayout>\n    </android.support.design.widget.AppBarLayout>\n\n    <include layout=\"@layout/content_scrolling\"/>\n\n    <android.support.design.widget.FloatingActionButton\n        android:id=\"@+id/fab\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"@dimen/fab_margin\"\n        app:layout_anchor=\"@id/app_bar\"\n        app:layout_anchorGravity=\"bottom|end\"\n        app:srcCompat=\"@android:drawable/ic_dialog_email\"/>\n\n</android.support.design.widget.CoordinatorLayout>\n\n```\n\n\n### scroll\n\n>Child View 伴随着滚动事件而滚出或滚进屏幕。注意两点：第一点，如果使用了其他值，必定要使用这个值才能起作用；第二点：如果在这个child View前面的任何其他Child View没有设置这个值，那么这个Child View的设置将失去作用。\n\n\n### enterAlways\n>快速返回模式。其实就是向下滚动时Scrolling View和Child View之间的滚动优先级问题。对比scroll和scroll | enterAlways设置，发生向下滚动事件时，前者优先滚动Scrolling View，后者优先滚动Child View，当优先滚动的一方已经全部滚进屏幕之后，另一方才开始滚动。\n\n\n### enterAlwaysCollapsed\n\n>enterAlways的附加值。这里涉及到Child View的高度和最小高度，向下滚动时，Child View先向下滚动最小高度值，然后Scrolling View开始滚动，到达边界时，Child View再向下滚动，直至显示完全。\n\n示例代码：\n\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|enterAlways|enterAlwaysCollapsed\"\n...\n</code></pre>\n\n\n### exitUntilCollapsed\n>这里也涉及到最小高度。发生向上滚动事件时，Child View向上滚动退出直至最小高度，然后Scrolling View开始滚动。也就是，Child View不会完全退出屏幕。\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n...\n</code></pre>\n\n### snap\n>就是Child View滚动比例的一个吸附效果。也就是说，Child View不会存在局部显示的情况，滚动Child View的部分高度，当我们松开手指时，Child View要么向上全部滚出屏幕，要么向下全部滚进屏幕，有点类似ViewPager的左右滑动。\n","source":"_posts/android_five_scrollFlags.md","raw":"---\ntitle: AppBarLayout的五种ScrollFlags\ndate: 2017-01-21 12:15:58\nupdate: \ncategory: [android5.0]\ntags: [android5.0]\n\n---\n\n## AppBarLayout的五种ScrollFlags。\n\n>ScrollFlags共有五种常量值供AppBarLayout的Children View使用，在xml布局文件中通过app:layout_scrollFlags设置，对应的值为：scroll，enterAlways，enterAlwaysCollapsed，snap，exitUntilCollapsed；\n\n### 先上代码。\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<android.support.design.widget.CoordinatorLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:fitsSystemWindows=\"true\"\n    tools:context=\"com.hhly.collapesingdemo.ScrollingActivity\">\n\n    <android.support.design.widget.AppBarLayout\n        android:id=\"@+id/app_bar\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"@dimen/app_bar_height\"\n        android:fitsSystemWindows=\"true\"\n        android:theme=\"@style/AppTheme.AppBarOverlay\">\n\n        <android.support.design.widget.CollapsingToolbarLayout\n            android:id=\"@+id/toolbar_layout\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:minHeight=\"30dp\"\n            android:fitsSystemWindows=\"true\"\n            app:contentScrim=\"?attr/colorPrimary\"\n            app:layout_scrollFlags=\"scroll\">\n\n            <android.support.v7.widget.Toolbar\n                android:id=\"@+id/toolbar\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"?attr/actionBarSize\"\n                app:layout_collapseMode=\"pin\"\n                app:popupTheme=\"@style/AppTheme.PopupOverlay\"/>\n\n        </android.support.design.widget.CollapsingToolbarLayout>\n    </android.support.design.widget.AppBarLayout>\n\n    <include layout=\"@layout/content_scrolling\"/>\n\n    <android.support.design.widget.FloatingActionButton\n        android:id=\"@+id/fab\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_margin=\"@dimen/fab_margin\"\n        app:layout_anchor=\"@id/app_bar\"\n        app:layout_anchorGravity=\"bottom|end\"\n        app:srcCompat=\"@android:drawable/ic_dialog_email\"/>\n\n</android.support.design.widget.CoordinatorLayout>\n\n```\n\n\n### scroll\n\n>Child View 伴随着滚动事件而滚出或滚进屏幕。注意两点：第一点，如果使用了其他值，必定要使用这个值才能起作用；第二点：如果在这个child View前面的任何其他Child View没有设置这个值，那么这个Child View的设置将失去作用。\n\n\n### enterAlways\n>快速返回模式。其实就是向下滚动时Scrolling View和Child View之间的滚动优先级问题。对比scroll和scroll | enterAlways设置，发生向下滚动事件时，前者优先滚动Scrolling View，后者优先滚动Child View，当优先滚动的一方已经全部滚进屏幕之后，另一方才开始滚动。\n\n\n### enterAlwaysCollapsed\n\n>enterAlways的附加值。这里涉及到Child View的高度和最小高度，向下滚动时，Child View先向下滚动最小高度值，然后Scrolling View开始滚动，到达边界时，Child View再向下滚动，直至显示完全。\n\n示例代码：\n\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|enterAlways|enterAlwaysCollapsed\"\n...\n</code></pre>\n\n\n### exitUntilCollapsed\n>这里也涉及到最小高度。发生向上滚动事件时，Child View向上滚动退出直至最小高度，然后Scrolling View开始滚动。也就是，Child View不会完全退出屏幕。\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n...\n</code></pre>\n\n### snap\n>就是Child View滚动比例的一个吸附效果。也就是说，Child View不会存在局部显示的情况，滚动Child View的部分高度，当我们松开手指时，Child View要么向上全部滚出屏幕，要么向下全部滚进屏幕，有点类似ViewPager的左右滑动。\n","slug":"android_five_scrollFlags","published":1,"updated":"2017-01-21T08:38:45.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciy8kkvou0005co1cbtt2tme0","content":"<h2 id=\"AppBarLayout的五种ScrollFlags。\"><a href=\"#AppBarLayout的五种ScrollFlags。\" class=\"headerlink\" title=\"AppBarLayout的五种ScrollFlags。\"></a>AppBarLayout的五种ScrollFlags。</h2><blockquote>\n<p>ScrollFlags共有五种常量值供AppBarLayout的Children View使用，在xml布局文件中通过app:layout_scrollFlags设置，对应的值为：scroll，enterAlways，enterAlwaysCollapsed，snap，exitUntilCollapsed；</p>\n</blockquote>\n<h3 id=\"先上代码。\"><a href=\"#先上代码。\" class=\"headerlink\" title=\"先上代码。\"></a>先上代码。</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.CoordinatorLayout</span></span></div><div class=\"line\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">\"http://schemas.android.com/tools\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:fitsSystemWindows</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">    <span class=\"attr\">tools:context</span>=<span class=\"string\">\"com.hhly.collapesingdemo.ScrollingActivity\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.AppBarLayout</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/app_bar\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"@dimen/app_bar_height\"</span></div><div class=\"line\">        <span class=\"attr\">android:fitsSystemWindows</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">        <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@style/AppTheme.AppBarOverlay\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.CollapsingToolbarLayout</span></span></div><div class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/toolbar_layout\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:minHeight</span>=<span class=\"string\">\"30dp\"</span></div><div class=\"line\">            <span class=\"attr\">android:fitsSystemWindows</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">            <span class=\"attr\">app:contentScrim</span>=<span class=\"string\">\"?attr/colorPrimary\"</span></div><div class=\"line\">            <span class=\"attr\">app:layout_scrollFlags</span>=<span class=\"string\">\"scroll\"</span>&gt;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">android.support.v7.widget.Toolbar</span></span></div><div class=\"line\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/toolbar\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"?attr/actionBarSize\"</span></div><div class=\"line\">                <span class=\"attr\">app:layout_collapseMode</span>=<span class=\"string\">\"pin\"</span></div><div class=\"line\">                <span class=\"attr\">app:popupTheme</span>=<span class=\"string\">\"@style/AppTheme.PopupOverlay\"</span>/&gt;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">android.support.design.widget.AppBarLayout</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">layout</span>=<span class=\"string\">\"@layout/content_scrolling\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.FloatingActionButton</span></span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fab\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_margin</span>=<span class=\"string\">\"@dimen/fab_margin\"</span></div><div class=\"line\">        <span class=\"attr\">app:layout_anchor</span>=<span class=\"string\">\"@id/app_bar\"</span></div><div class=\"line\">        <span class=\"attr\">app:layout_anchorGravity</span>=<span class=\"string\">\"bottom|end\"</span></div><div class=\"line\">        <span class=\"attr\">app:srcCompat</span>=<span class=\"string\">\"@android:drawable/ic_dialog_email\"</span>/&gt;</div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">android.support.design.widget.CoordinatorLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"scroll\"><a href=\"#scroll\" class=\"headerlink\" title=\"scroll\"></a>scroll</h3><blockquote>\n<p>Child View 伴随着滚动事件而滚出或滚进屏幕。注意两点：第一点，如果使用了其他值，必定要使用这个值才能起作用；第二点：如果在这个child View前面的任何其他Child View没有设置这个值，那么这个Child View的设置将失去作用。</p>\n</blockquote>\n<h3 id=\"enterAlways\"><a href=\"#enterAlways\" class=\"headerlink\" title=\"enterAlways\"></a>enterAlways</h3><blockquote>\n<p>快速返回模式。其实就是向下滚动时Scrolling View和Child View之间的滚动优先级问题。对比scroll和scroll | enterAlways设置，发生向下滚动事件时，前者优先滚动Scrolling View，后者优先滚动Child View，当优先滚动的一方已经全部滚进屏幕之后，另一方才开始滚动。</p>\n</blockquote>\n<h3 id=\"enterAlwaysCollapsed\"><a href=\"#enterAlwaysCollapsed\" class=\"headerlink\" title=\"enterAlwaysCollapsed\"></a>enterAlwaysCollapsed</h3><blockquote>\n<p>enterAlways的附加值。这里涉及到Child View的高度和最小高度，向下滚动时，Child View先向下滚动最小高度值，然后Scrolling View开始滚动，到达边界时，Child View再向下滚动，直至显示完全。</p>\n</blockquote>\n<p>示例代码：</p>\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|enterAlways|enterAlwaysCollapsed\"\n...\n</code></pre>\n\n\n<h3 id=\"exitUntilCollapsed\"><a href=\"#exitUntilCollapsed\" class=\"headerlink\" title=\"exitUntilCollapsed\"></a>exitUntilCollapsed</h3><blockquote>\n<p>这里也涉及到最小高度。发生向上滚动事件时，Child View向上滚动退出直至最小高度，然后Scrolling View开始滚动。也就是，Child View不会完全退出屏幕。</p>\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n...\n</code></pre>\n\n</blockquote>\n<h3 id=\"snap\"><a href=\"#snap\" class=\"headerlink\" title=\"snap\"></a>snap</h3><blockquote>\n<p>就是Child View滚动比例的一个吸附效果。也就是说，Child View不会存在局部显示的情况，滚动Child View的部分高度，当我们松开手指时，Child View要么向上全部滚出屏幕，要么向下全部滚进屏幕，有点类似ViewPager的左右滑动。</p>\n</blockquote>\n","excerpt":"","more":"<h2 id=\"AppBarLayout的五种ScrollFlags。\"><a href=\"#AppBarLayout的五种ScrollFlags。\" class=\"headerlink\" title=\"AppBarLayout的五种ScrollFlags。\"></a>AppBarLayout的五种ScrollFlags。</h2><blockquote>\n<p>ScrollFlags共有五种常量值供AppBarLayout的Children View使用，在xml布局文件中通过app:layout_scrollFlags设置，对应的值为：scroll，enterAlways，enterAlwaysCollapsed，snap，exitUntilCollapsed；</p>\n</blockquote>\n<h3 id=\"先上代码。\"><a href=\"#先上代码。\" class=\"headerlink\" title=\"先上代码。\"></a>先上代码。</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.CoordinatorLayout</span></div><div class=\"line\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></div><div class=\"line\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">\"http://schemas.android.com/tools\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">    <span class=\"attr\">android:fitsSystemWindows</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">    <span class=\"attr\">tools:context</span>=<span class=\"string\">\"com.hhly.collapesingdemo.ScrollingActivity\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.AppBarLayout</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/app_bar\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"@dimen/app_bar_height\"</span></div><div class=\"line\">        <span class=\"attr\">android:fitsSystemWindows</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">        <span class=\"attr\">android:theme</span>=<span class=\"string\">\"@style/AppTheme.AppBarOverlay\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.CollapsingToolbarLayout</span></div><div class=\"line\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/toolbar_layout\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">            <span class=\"attr\">android:minHeight</span>=<span class=\"string\">\"30dp\"</span></div><div class=\"line\">            <span class=\"attr\">android:fitsSystemWindows</span>=<span class=\"string\">\"true\"</span></div><div class=\"line\">            <span class=\"attr\">app:contentScrim</span>=<span class=\"string\">\"?attr/colorPrimary\"</span></div><div class=\"line\">            <span class=\"attr\">app:layout_scrollFlags</span>=<span class=\"string\">\"scroll\"</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">android.support.v7.widget.Toolbar</span></div><div class=\"line\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/toolbar\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></div><div class=\"line\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"?attr/actionBarSize\"</span></div><div class=\"line\">                <span class=\"attr\">app:layout_collapseMode</span>=<span class=\"string\">\"pin\"</span></div><div class=\"line\">                <span class=\"attr\">app:popupTheme</span>=<span class=\"string\">\"@style/AppTheme.PopupOverlay\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">android.support.design.widget.CollapsingToolbarLayout</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">android.support.design.widget.AppBarLayout</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">layout</span>=<span class=\"string\">\"@layout/content_scrolling\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">android.support.design.widget.FloatingActionButton</span></div><div class=\"line\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fab\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></div><div class=\"line\">        <span class=\"attr\">android:layout_margin</span>=<span class=\"string\">\"@dimen/fab_margin\"</span></div><div class=\"line\">        <span class=\"attr\">app:layout_anchor</span>=<span class=\"string\">\"@id/app_bar\"</span></div><div class=\"line\">        <span class=\"attr\">app:layout_anchorGravity</span>=<span class=\"string\">\"bottom|end\"</span></div><div class=\"line\">        <span class=\"attr\">app:srcCompat</span>=<span class=\"string\">\"@android:drawable/ic_dialog_email\"</span>/&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">android.support.design.widget.CoordinatorLayout</span>&gt;</span></div></pre></td></tr></table></figure>\n<h3 id=\"scroll\"><a href=\"#scroll\" class=\"headerlink\" title=\"scroll\"></a>scroll</h3><blockquote>\n<p>Child View 伴随着滚动事件而滚出或滚进屏幕。注意两点：第一点，如果使用了其他值，必定要使用这个值才能起作用；第二点：如果在这个child View前面的任何其他Child View没有设置这个值，那么这个Child View的设置将失去作用。</p>\n</blockquote>\n<h3 id=\"enterAlways\"><a href=\"#enterAlways\" class=\"headerlink\" title=\"enterAlways\"></a>enterAlways</h3><blockquote>\n<p>快速返回模式。其实就是向下滚动时Scrolling View和Child View之间的滚动优先级问题。对比scroll和scroll | enterAlways设置，发生向下滚动事件时，前者优先滚动Scrolling View，后者优先滚动Child View，当优先滚动的一方已经全部滚进屏幕之后，另一方才开始滚动。</p>\n</blockquote>\n<h3 id=\"enterAlwaysCollapsed\"><a href=\"#enterAlwaysCollapsed\" class=\"headerlink\" title=\"enterAlwaysCollapsed\"></a>enterAlwaysCollapsed</h3><blockquote>\n<p>enterAlways的附加值。这里涉及到Child View的高度和最小高度，向下滚动时，Child View先向下滚动最小高度值，然后Scrolling View开始滚动，到达边界时，Child View再向下滚动，直至显示完全。</p>\n</blockquote>\n<p>示例代码：</p>\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|enterAlways|enterAlwaysCollapsed\"\n...\n</code></pre>\n\n\n<h3 id=\"exitUntilCollapsed\"><a href=\"#exitUntilCollapsed\" class=\"headerlink\" title=\"exitUntilCollapsed\"></a>exitUntilCollapsed</h3><blockquote>\n<p>这里也涉及到最小高度。发生向上滚动事件时，Child View向上滚动退出直至最小高度，然后Scrolling View开始滚动。也就是，Child View不会完全退出屏幕。</p>\n<pre><code>\n...\nandroid:layout_height=\"@dimen/dp_200\"\nandroid:minHeight=\"@dimen/dp_56\"\n...\napp:layout_scrollFlags=\"scroll|exitUntilCollapsed\"\n...\n</code></pre>\n\n</blockquote>\n<h3 id=\"snap\"><a href=\"#snap\" class=\"headerlink\" title=\"snap\"></a>snap</h3><blockquote>\n<p>就是Child View滚动比例的一个吸附效果。也就是说，Child View不会存在局部显示的情况，滚动Child View的部分高度，当我们松开手指时，Child View要么向上全部滚出屏幕，要么向下全部滚进屏幕，有点类似ViewPager的左右滑动。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciy8kkvkh0000co1cyvv8q15m","category_id":"ciy8kkvkx0001co1c2ppgd08q","_id":"ciy8kkvkx0004co1clmrc1lod"},{"post_id":"ciy8kkvou0005co1cbtt2tme0","category_id":"ciy8kkvou0008co1cxfgixfd3","_id":"ciy8kkvou000bco1cfbwhplgp"}],"PostTag":[{"post_id":"ciy8kkvkh0000co1cyvv8q15m","tag_id":"ciy8kkvkx0002co1c37k2vjph","_id":"ciy8kkvkx0003co1c5zogez1g"},{"post_id":"ciy8kkvou0005co1cbtt2tme0","tag_id":"ciy8kkvou0009co1csvi9240g","_id":"ciy8kkvou000aco1cw6mhqg5v"}],"Tag":[{"name":"dagger2","_id":"ciy8kkvkx0002co1c37k2vjph"},{"name":"android5.0","_id":"ciy8kkvou0009co1csvi9240g"}]}}